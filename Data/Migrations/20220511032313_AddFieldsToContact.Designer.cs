// <auto-generated />
using System;
using AmeriForce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmeriForce.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220511032313_AddFieldsToContact")]
    partial class AddFieldsToContact
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AmeriForce.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommunityNickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Extension")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastPasswordChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("NumberOfFailedLogins")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhotoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneSidKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("UserRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("AmeriForce.Data.CRMTask", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActivityOriginType")
                        .HasColumnType("int");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailMessageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsArchived")
                        .HasColumnType("int");

                    b.Property<int?>("IsClosed")
                        .HasColumnType("int");

                    b.Property<int?>("IsRecurrence")
                        .HasColumnType("int");

                    b.Property<int?>("IsReminderSet")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurrenceActivityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecurrenceDayOfMonth")
                        .HasColumnType("int");

                    b.Property<int?>("RecurrenceDayOfWeekMask")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecurrenceEndDateOnly")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecurrenceInstance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecurrenceInterval")
                        .HasColumnType("int");

                    b.Property<string>("RecurrenceMonthOfYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecurrenceStartDateOnly")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecurrenceTimeZoneSidKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurrenceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReminderDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SystemModstamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WhatCount")
                        .HasColumnType("int");

                    b.Property<string>("WhatId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WhoCount")
                        .HasColumnType("int");

                    b.Property<string>("WhoId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CRMTasks");
                });

            modelBuilder.Entity("AmeriForce.Data.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("AD_Credit_Review")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("All_Post_Funding_Tasks_Completed")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Approval_Decision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Approval_Decision_Time_1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BDO_Write_Up_Received")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Bankruptcy_Search")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Client_Profile_In")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Client_Profile_Out")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Corporate_Verification")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Criminal_Background_Search")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("D_B_Prospect")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Delayed_Opportunity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Due_Diligence_Deposit_Received")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExpectedRevenue")
                        .HasColumnType("int");

                    b.Property<string>("External_Opportunity_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FTL_Search_State_County")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("File_Received_by_UW")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("File_to_Client_Services")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("File_to_Mgmt_for_Review")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("First_Response")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalQuarter")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<string>("ForecastCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForecastCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Initial_Funding")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Ins_Verification_Transp_Staff_only")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Invoices_Rcd_Ready_to_Move_Fwd")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsClosed")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Judgment_Search")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastAmountChangedHistoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastCloseDateChangedHistoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastStageChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeadSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Legal_Docs_Issued")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Legal_Docs_Received")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Legal_Docs_Time_Out")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Litigation_Search")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lost_to_Competitor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Mgmt_Completes_Post_Funding_File_Review")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextActivityID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pre_Approval_Biz_Hours")
                        .HasColumnType("int");

                    b.Property<string>("Reason_Lost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Referral_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Referring_Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referring_Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("STL_Search")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Searches_Requested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Searches_Returned")
                        .HasColumnType("datetime2");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StageSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SystemModstamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Tax_Guard_Report")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Term_Sheet_Issued")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Term_Sheet_Received")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UCC_Search")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UW_Hands_over_for_First_Review")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AmeriForce.Data.ClientContactRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SystemModstamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ClientContactRoles");
                });

            modelBuilder.Entity("AmeriForce.Data.ClientStage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ClientStages");
                });

            modelBuilder.Entity("AmeriForce.Data.Company", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharterState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MailingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SICCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("AmeriForce.Data.Contact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alt_Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alt_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alt_Phone_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssistantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Children")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direct_Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmailBouncedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailBouncedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmailOptOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Guarantor")
                        .HasColumnType("bit");

                    b.Property<bool>("HasOptedOutOfEmail")
                        .HasColumnType("bit");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initial_Meeting_Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedIn_Profile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingSuite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mailing_Lists")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextActivityID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opt_Out")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Opt_Out_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherSuite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnershipPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preferred_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating_Sort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Reassigned_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Referral_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Referral_Partner_Agmnt_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Referral_Partner_Agmnt_Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referring_Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referring_Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Standard_Pay_Terms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tax_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Term_Of_Agreement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter_Profile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Update_Needed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update_Needed_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("AmeriForce.Data.EmailMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BccAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CcAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstOpenedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HasAttachment")
                        .HasColumnType("int");

                    b.Property<string>("HtmlBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsTracked")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastOpenedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MessageDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MessageSize")
                        .HasColumnType("int");

                    b.Property<string>("RelatedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SystemModstamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemporaryID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreadIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailMessages");
                });

            modelBuilder.Entity("AmeriForce.Data.Facility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("AmeriForce.Data.LOV_ClientStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("LOV_ClientStatus");
                });

            modelBuilder.Entity("AmeriForce.Data.LOV_MailingList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LOV_MailingLists");
                });

            modelBuilder.Entity("AmeriForce.Data.LOV_ReferralType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ReferralType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LOV_ReferralType");
                });

            modelBuilder.Entity("AmeriForce.Data.LOV_RelationshipStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LOV_RelationshipStatuses");
                });

            modelBuilder.Entity("AmeriForce.Data.LOV_State", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LOV_State");
                });

            modelBuilder.Entity("AmeriForce.Data.LOV_TagGradeSort", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LOV_TagGradeSorts");
                });

            modelBuilder.Entity("AmeriForce.Data.LOV_TaskType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TaskType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LOV_TaskType");
                });

            modelBuilder.Entity("AmeriForce.Data.LOV_TemplateType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LOV_TemplateType");
                });

            modelBuilder.Entity("AmeriForce.Data.LOV_UpdateNeeded", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UpdateField")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LOV_UpdateNeededs");
                });

            modelBuilder.Entity("AmeriForce.Data.NewInitialDeal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AnnualRevenue")
                        .HasColumnType("int");

                    b.Property<string>("Business_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Charter_State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Client_Profile_In")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Client_Profile_Out")
                        .HasColumnType("datetime2");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConvertedAccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConvertedContactId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConvertedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConvertedOpportunityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DUNS_Acct")
                        .HasColumnType("int");

                    b.Property<string>("Direct_Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EXPERIAN_Acct")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmailBouncedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailBouncedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initial_Meeting_Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsConverted")
                        .HasColumnType("int");

                    b.Property<int>("IsUnreadByOwner")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastTransferDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeadSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfEmployees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opt_Out")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Opt_Out_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pre_Approval_Biz_Hours")
                        .HasColumnType("int");

                    b.Property<string>("Preferred_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Referral_DAte")
                        .HasColumnType("datetime2");

                    b.Property<string>("Referring_Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referring_Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIC_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SystemModstamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Update_Needed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update_Needed_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewInitialDeals");
                });

            modelBuilder.Entity("AmeriForce.Data.SICCode", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SICCodes");
                });

            modelBuilder.Entity("AmeriForce.Data.TestCompany", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CharterState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MailingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MailingPostalCode")
                        .HasColumnType("int")
                        .HasMaxLength(5);

                    b.Property<string>("MailingState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SICCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TestCompany");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AmeriForce.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AmeriForce.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmeriForce.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AmeriForce.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
